import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime, timedelta
import pandas as pd
from database import get_session, close_session
from models.models import Habit, Progress
from config import CHART_COLORS, CHART_STYLE, STATS_DIR
import os

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∏–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
plt.style.use(CHART_STYLE)

def generate_weekly_progress(habit_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≥—Ä–∞—Ñ–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞ –Ω–µ–¥–µ–ª—é"""
    session = get_session()
    try:
        habit = session.query(Habit).get(habit_id)
        if not habit:
            return None

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        end_date = datetime.utcnow()
        start_date = end_date - timedelta(days=6)
        
        progress_data = session.query(Progress).filter(
            Progress.habit_id == habit_id,
            Progress.date >= start_date,
            Progress.date <= end_date
        ).all()

        # –°–æ–∑–¥–∞–µ–º DataFrame
        dates = pd.date_range(start=start_date, end=end_date, freq='D')
        data = []
        for date in dates:
            day_progress = next(
                (p for p in progress_data if p.date.date() == date.date()),
                None
            )
            data.append({
                'date': date,
                'completed': day_progress.completed if day_progress else False,
                'skipped': day_progress.skipped if day_progress else False
            })
        
        df = pd.DataFrame(data)

        # –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
        plt.figure(figsize=(10, 6))
        plt.bar(
            df['date'],
            df['completed'].astype(int),
            color=CHART_COLORS[0],
            label='–í—ã–ø–æ–ª–Ω–µ–Ω–æ'
        )
        plt.bar(
            df['date'],
            df['skipped'].astype(int),
            color=CHART_COLORS[2],
            label='–ü—Ä–æ–ø—É—â–µ–Ω–æ'
        )

        plt.title(f'–ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏–≤—ã—á–∫–∏ ¬´{habit.name}¬ª –∑–∞ –Ω–µ–¥–µ–ª—é')
        plt.xlabel('–î–∞—Ç–∞')
        plt.ylabel('–°—Ç–∞—Ç—É—Å')
        plt.legend()
        plt.xticks(rotation=45)
        plt.tight_layout()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
        filename = f'weekly_progress_{habit_id}_{datetime.now().strftime("%Y%m%d")}.png'
        filepath = os.path.join(STATS_DIR, filename)
        plt.savefig(filepath)
        plt.close()

        return filepath
    finally:
        close_session()

def generate_completion_rate(habit_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä—É–≥–æ–≤–æ–π –¥–∏–∞–≥—Ä–∞–º–º—ã –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è"""
    session = get_session()
    try:
        habit = session.query(Habit).get(habit_id)
        if not habit:
            return None

        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total = session.query(Progress).filter(
            Progress.habit_id == habit_id
        ).count()
        
        completed = session.query(Progress).filter(
            Progress.habit_id == habit_id,
            Progress.completed == True
        ).count()
        
        skipped = session.query(Progress).filter(
            Progress.habit_id == habit_id,
            Progress.skipped == True
        ).count()
        
        missed = total - completed - skipped

        # –°–æ–∑–¥–∞–µ–º –∫—Ä—É–≥–æ–≤—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
        plt.figure(figsize=(8, 8))
        plt.pie(
            [completed, skipped, missed],
            labels=['–í—ã–ø–æ–ª–Ω–µ–Ω–æ', '–ü—Ä–æ–ø—É—â–µ–Ω–æ', '–ü—Ä–æ–ø—É—â–µ–Ω–æ –±–µ–∑ –æ—Ç–º–µ—Ç–∫–∏'],
            colors=CHART_COLORS[:3],
            autopct='%1.1f%%'
        )
        plt.title(f'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–≤—ã—á–∫–∏ ¬´{habit.name}¬ª')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥—Ä–∞—Ñ–∏–∫
        filename = f'completion_rate_{habit_id}_{datetime.now().strftime("%Y%m%d")}.png'
        filepath = os.path.join(STATS_DIR, filename)
        plt.savefig(filepath)
        plt.close()

        return filepath
    finally:
        close_session()

def get_weekly_report(habit_id: int) -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –∑–∞ –Ω–µ–¥–µ–ª—é"""
    session = get_session()
    try:
        habit = session.query(Habit).get(habit_id)
        if not habit:
            return None

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        end_date = datetime.utcnow()
        start_date = end_date - timedelta(days=6)
        
        progress_data = session.query(Progress).filter(
            Progress.habit_id == habit_id,
            Progress.date >= start_date,
            Progress.date <= end_date
        ).all()

        completed = sum(1 for p in progress_data if p.completed)
        skipped = sum(1 for p in progress_data if p.skipped)
        missed = 7 - completed - skipped

        report = (
            f"üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–∏–≤—ã—á–∫–µ ¬´{habit.name}¬ª\n\n"
            f"–í—ã–ø–æ–ª–Ω–µ–Ω–æ: {completed} –¥–Ω–µ–π\n"
            f"–ü—Ä–æ–ø—É—â–µ–Ω–æ: {skipped} –¥–Ω–µ–π\n"
            f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –±–µ–∑ –æ—Ç–º–µ—Ç–∫–∏: {missed} –¥–Ω–µ–π\n\n"
        )

        if completed >= 5:
            report += "üéâ –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏!"
        elif completed >= 3:
            report += "üëç –•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!"
        else:
            report += "üí™ –ù–µ —Å–¥–∞–≤–∞–π—Ç–µ—Å—å! –ö–∞–∂–¥—ã–π –¥–µ–Ω—å - –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å!"

        return report
    finally:
        close_session() 